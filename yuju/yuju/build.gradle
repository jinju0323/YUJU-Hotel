plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kr.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 프로젝트 생성 시 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 추가 의존성
	implementation 'com.github.ua-parser:uap-java:1.6.1'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	implementation 'net.coobird:thumbnailator:0.4.20'

	//test
	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'

	/** Spring Session */
	// 프로젝트 생성 후 아래 구문을 직접 등록한다.
	implementation 'org.springframework.session:spring-session-jdbc'

	/** Swagger */
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	/** Spring Security */
    // ✅ Spring Security 의존성 (필수)
    implementation 'org.springframework.boot:spring-boot-starter-security:3.4.2'
    
    // ✅ JWT 관련 라이브러리 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3' // JWT의 기본 API 제공
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3' // JWT 내부 구현체 (토큰 생성 & 검증)
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3' // JSON 처리 라이브러리

}

tasks.named('test') {
	useJUnitPlatform()
}
